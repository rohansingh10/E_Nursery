@model E_Nursery.Models.UserAccount

@{ ViewBag.Title = "Register";
    Layout = null; }


<style>
    body {
        background-image: url('https://wtop.com/wp-content/uploads/2019/06/garden-center.jpg');
        background-size: cover;
        background-repeat: no-repeat;
        background-size: 100% 150%;
    }

    input[type=text], input[type=Password], input[type=ConfirmPassword], input[type=number], input[type=email], input[type=number] {
        width: 50%;
        padding: 5px 14px;
        margin: 5px 0;
        display: inline-block;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

    div {
        margin-left: 20px;
        margin-bottom: 10px;
    }

    button {
        padding: 4px 12px;
        margin: 3px 0;
        border: none;
        cursor: pointer;
        width: 20%;
        background-color: #4CAF50;
    }


    .loginbox {
        margin: 30px;
        background-color: ghostwhite;
        border: 1px solid black;
        opacity: 0.8;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div style="width:700px; margin:0 auto;" class="loginbox">
        <div class="form-horizontal">
            <h2>E-Nursery User Registration Form</h2>
            <h4>Please Fill Up Your Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (ViewBag.Message != null)
            {
                <div class="form-group">
                    <div class="col-md-10">@ViewBag.Message</div>
                </div>}
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <text>Security Question: <br /> What Is Your Pet Name?</text>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordRecoveryQuestion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PasswordRecoveryQuestion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = "Applied" } })

                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="button">Submit</button>
                </div>
            </div>
        </div>
    </div>}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}